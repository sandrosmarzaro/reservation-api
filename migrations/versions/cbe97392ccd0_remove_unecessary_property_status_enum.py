"""remove unecessary property status enum

Revision ID: cbe97392ccd0
Revises: f08dda69fbe5
Create Date: 2025-06-12 04:51:50.826167

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cbe97392ccd0'
down_revision: Union[str, None] = 'f08dda69fbe5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_reservations_id'), table_name='reservations')
    op.drop_table('reservations')
    op.drop_index(op.f('ix_properties_id'), table_name='properties')
    op.drop_table('properties')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('properties',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('properties_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address_street', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address_neighborhood', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('address_city', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('address_state', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('rooms', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('capacity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('price_per_night', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('AVAILABLE', 'UNAVAILABLE', name='propertystatus'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='properties_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_properties_id'), 'properties', ['id'], unique=False)
    op.create_table('reservations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('client_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('client_email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('guests_quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('property_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], name=op.f('reservations_property_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('reservations_pkey'))
    )
    op.create_index(op.f('ix_reservations_id'), 'reservations', ['id'], unique=False)
    # ### end Alembic commands ###
